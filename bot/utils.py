from dbase.create import check_db, create_db, start_write_table
from dbase.library import get_all_children
from sqlalchemy import create_engine
from sqlalchemy.orm import Session
from telebot import types as teletypes


def start(message, bot, session, nomess=0):
    buttons = [
        ["üíä –†–∏—Å–∫–∏ –ü–≠/–°–ó–†–ü"],
        ["üë∂ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ–±–µ–Ω–∫–∞"],
        ["üìñ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫"],
    ]
    chat_id = message.chat.id
    check_baby = get_all_children(session, chat_id)
    if check_baby[chat_id]:
        buttons[2].append("üíâ –ú–æ—è –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—è")

    if not nomess:
        hellowmessage = "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ—Ç –±–æ—Ç —É–º–µ–µ—Ç –æ—Ü–µ–Ω–∏–≤–∞—Ç—å —Ä–∏—Å–∫–∏ –°–ó–†–ü –∏ –ø—Ä–µ—ç–∫–ª–∞–º–ø—Å–∏–∏ –≤–æ –≤—Ä–µ–º—è –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏. –°–æ–∑–¥–∞–Ω –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö RCOG"

    if nomess:
        hellowmessage = "–≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"

    draw_buttons(bot, message, buttons, "row", hellowmessage)


def menu_guid_vaccine(message, bot):
    buttons = [
        ["üìñ –û–±—â–∏–π –≥—Ä–∞—Ñ–∏–∫ –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏"],
        ["üìñ –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≤–∏–≤–æ–∫ –∑–∞ –º–µ—Å—è—Ü"],
        ["üìñ –ò–Ω—Ñ–µ–∫—Ü–∏–∏", "üìñ –ü—Ä–µ–ø–∞—Ä–∞—Ç—ã"],
        ["–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"],
    ]
    draw_buttons(bot, message, buttons, "row")
    return


def draw_buttons(
    bot, message, list_names, type_add="add", msg_text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"
):
    chat_id = message.chat.id

    keyboard = teletypes.ReplyKeyboardMarkup(resize_keyboard=True)
    for i in range(len(list_names)):
        list_buttons = []
        for btn in range(len(list_names[i])):
            list_buttons.append(teletypes.InlineKeyboardButton(text=list_names[i][btn]))
        if type_add == "row":
            keyboard.row(*list_buttons)
        else:
            for i in range(len(list_buttons)):
                keyboard.add(list_buttons[i])

    bot.send_message(chat_id, msg_text, reply_markup=keyboard)


def get_session(db_file):

    if not check_db(db_file):
        print(db_file)
        engine = create_db(db_file)
        session = Session(bind=engine)
        start_write_table(session)
    else:
        engine = create_engine("sqlite:///" + db_file)
        session = Session(bind=engine)

    return session


def menu_risk(message, bot):
    buttons = [
        [
            "üíä –û—Ü–µ–Ω–∏—Ç—å —Ä–∏—Å–∫–∏ –≤ —Ç–µ–∫—É—â—É—é –±–µ—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç—å",
            "üíä –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç",
            "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        ]
    ]
    draw_buttons(bot, message, buttons, "add")
    return


def menu_my_vaccine(message, bot):
    buttons = [
        ["üíâ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø—Ä–∏–≤–∏–≤–æ–∫"],
        ["üíâ –ü–ª–∞–Ω –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏–∏", "üíâ –î–æ–±–∞–≤–∏—Ç—å –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—é"],
        ["–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"],
    ]
    draw_buttons(bot, message, buttons, "row")
    return
